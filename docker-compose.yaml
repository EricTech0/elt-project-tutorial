version: "3.8"

services:
  source_postgres:
    image: postgres:15.6
    ports:
      - "5433:5432"
    networks:
      - elt_network
    environment:
      POSTGRES_DB: ${SOURCE_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./source_db_init/init.sql:/docker-entrypoint-initdb.d/init.sql

  destination_postgres:
    image: postgres:15.6
    ports:
      - "5434:5432"
    networks:
      - elt_network
    depends_on:
      - source_postgres
    environment:
      POSTGRES_DB: ${DESTINATION_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    # volumes:
    #   - destination_db_data:/var/lib/postgresql/data

  elt_script:
    build:
      context: ./scripts
      dockerfile: Dockerfile
    command: ["python", "elt_script.py"]
    networks:
      - elt_network
    depends_on:
      - destination_postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SOURCE_DB_NAME=${SOURCE_DB_NAME}
      - SOURCE_DB_HOST=${SOURCE_DB_HOST}
      - DESTINATION_DB_NAME=${DESTINATION_DB_NAME}
      - DESTINATION_DB_HOST=${DESTINATION_DB_HOST}

  dbt:
    image: ghcr.io/dbt-labs/dbt-postgres:1.4.7
    command:
      [
        "run",
        "--profiles-dir",
        "/root",
        "--project-dir",
        "/dbt",
        "--full-refresh",
      ]
    networks:
      - elt_network
    volumes:
      - ./custom_postgres:/dbt
      - ~/.dbt:/root
    depends_on:
      elt_script:
        condition: service_completed_successfully
    environment:
      DBT_PROFILE: default
      DBT_TARGET: dev
networks:
  elt_network:
    driver: bridge

volumes:
  destination_db_data:
